#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoAPServiceApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EnvidasUzunDere")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChannel(Channel instance);
    partial void UpdateChannel(Channel instance);
    partial void DeleteChannel(Channel instance);
    partial void InsertInstantData(InstantData instance);
    partial void UpdateInstantData(InstantData instance);
    partial void DeleteInstantData(InstantData instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EnvidasUzunDereConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Channel> Channels
		{
			get
			{
				return this.GetTable<Channel>();
			}
		}
		
		public System.Data.Linq.Table<InstantData> InstantDatas
		{
			get
			{
				return this.GetTable<InstantData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Channel")]
	public partial class Channel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _number;
		
		private int _saveCol;
		
		private int _protocol;
		
		private string _name;
		
		private System.Nullable<int> _state;
		
		private string _units;
		
		private string _serial;
		
		private string _avgType;
		
		private System.Nullable<double> _lowRange;
		
		private System.Nullable<double> _highRange;
		
		private System.Nullable<double> _lowVolt;
		
		private System.Nullable<double> _highVolt;
		
		private bool _calcEnable;
		
		private string _calcString;
		
		private string _calcVars;
		
		private System.Nullable<int> _monCh;
		
		private System.Nullable<int> _channelEX;
		
		private int _displayFormat;
		
		private System.Nullable<double> _aENG;
		
		private System.Nullable<double> _bENG;
		
		private double _threshold;
		
		private bool _useCalibCorrection;
		
		private double _zero;
		
		private double _factor;
		
		private bool _EUcorrect;
		
		private double _spanDriftOfRef;
		
		private double _zeroDrift;
		
		private System.Nullable<int> _spanOffset;
		
		private bool _logEnable;
		
		private int _chType;
		
		private bool _outEnable;
		
		private System.Nullable<int> _outProtocol;
		
		private System.Nullable<int> _outMonitor;
		
		private System.Nullable<double> _outLowVolt;
		
		private System.Nullable<double> _outHiVolt;
		
		private bool _rangeValid;
		
		private bool _rateOfChangeValid;
		
		private System.Nullable<double> _rateOfChange;
		
		private int _viewPos;
		
		private System.Nullable<int> _address;
		
		private System.Nullable<bool> _uniPolar;
		
		private bool _calibInvalidate;
		
		private System.Nullable<int> _calibDigitalOutput;
		
		private System.Nullable<int> _spanCalibValidType;
		
		private System.Nullable<decimal> _factorLow;
		
		private System.Nullable<decimal> _factorHigh;
		
		private short _correctionZeroFactor;
		
		private short _Poc;
		
		private string _MethodCode;
		
		private System.Nullable<double> _rangeDeviationLow;
		
		private System.Nullable<double> _rangeDeviationHigh;
		
		private bool _RangeValidType;
		
		private bool _calibDoubleInvalidate;
		
		private bool _UseOOCStatus;
		
		private int _UseOOC_Tries;
		
		private bool _UseCalibGap;
		
		private int _UseCalibGapHours;
		
		private bool _WebDisplay;
		
		private System.Nullable<decimal> _DirectiveELV;
		
		private System.Nullable<decimal> _DailyELV;
		
		private System.Nullable<int> _ELVAverage;
		
		private bool _UseConstant;
		
		private bool _ConstantValidType;
		
		private System.Nullable<int> _ConstantSamples;
		
		private System.Nullable<decimal> _ConstantValue;
		
		private int _PollutantType;
		
		private bool _ConstantByTimebase;
		
		private double _threshold24hr;
		
		private EntityRef<InstantData> _InstantData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumberChanging(int value);
    partial void OnnumberChanged();
    partial void OnsaveColChanging(int value);
    partial void OnsaveColChanged();
    partial void OnprotocolChanging(int value);
    partial void OnprotocolChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstateChanging(System.Nullable<int> value);
    partial void OnstateChanged();
    partial void OnunitsChanging(string value);
    partial void OnunitsChanged();
    partial void OnserialChanging(string value);
    partial void OnserialChanged();
    partial void OnavgTypeChanging(string value);
    partial void OnavgTypeChanged();
    partial void OnlowRangeChanging(System.Nullable<double> value);
    partial void OnlowRangeChanged();
    partial void OnhighRangeChanging(System.Nullable<double> value);
    partial void OnhighRangeChanged();
    partial void OnlowVoltChanging(System.Nullable<double> value);
    partial void OnlowVoltChanged();
    partial void OnhighVoltChanging(System.Nullable<double> value);
    partial void OnhighVoltChanged();
    partial void OncalcEnableChanging(bool value);
    partial void OncalcEnableChanged();
    partial void OncalcStringChanging(string value);
    partial void OncalcStringChanged();
    partial void OncalcVarsChanging(string value);
    partial void OncalcVarsChanged();
    partial void OnmonChChanging(System.Nullable<int> value);
    partial void OnmonChChanged();
    partial void OnchannelEXChanging(System.Nullable<int> value);
    partial void OnchannelEXChanged();
    partial void OndisplayFormatChanging(int value);
    partial void OndisplayFormatChanged();
    partial void OnaENGChanging(System.Nullable<double> value);
    partial void OnaENGChanged();
    partial void OnbENGChanging(System.Nullable<double> value);
    partial void OnbENGChanged();
    partial void OnthresholdChanging(double value);
    partial void OnthresholdChanged();
    partial void OnuseCalibCorrectionChanging(bool value);
    partial void OnuseCalibCorrectionChanged();
    partial void OnzeroChanging(double value);
    partial void OnzeroChanged();
    partial void OnfactorChanging(double value);
    partial void OnfactorChanged();
    partial void OnEUcorrectChanging(bool value);
    partial void OnEUcorrectChanged();
    partial void OnspanDriftOfRefChanging(double value);
    partial void OnspanDriftOfRefChanged();
    partial void OnzeroDriftChanging(double value);
    partial void OnzeroDriftChanged();
    partial void OnspanOffsetChanging(System.Nullable<int> value);
    partial void OnspanOffsetChanged();
    partial void OnlogEnableChanging(bool value);
    partial void OnlogEnableChanged();
    partial void OnchTypeChanging(int value);
    partial void OnchTypeChanged();
    partial void OnoutEnableChanging(bool value);
    partial void OnoutEnableChanged();
    partial void OnoutProtocolChanging(System.Nullable<int> value);
    partial void OnoutProtocolChanged();
    partial void OnoutMonitorChanging(System.Nullable<int> value);
    partial void OnoutMonitorChanged();
    partial void OnoutLowVoltChanging(System.Nullable<double> value);
    partial void OnoutLowVoltChanged();
    partial void OnoutHiVoltChanging(System.Nullable<double> value);
    partial void OnoutHiVoltChanged();
    partial void OnrangeValidChanging(bool value);
    partial void OnrangeValidChanged();
    partial void OnrateOfChangeValidChanging(bool value);
    partial void OnrateOfChangeValidChanged();
    partial void OnrateOfChangeChanging(System.Nullable<double> value);
    partial void OnrateOfChangeChanged();
    partial void OnviewPosChanging(int value);
    partial void OnviewPosChanged();
    partial void OnaddressChanging(System.Nullable<int> value);
    partial void OnaddressChanged();
    partial void OnuniPolarChanging(System.Nullable<bool> value);
    partial void OnuniPolarChanged();
    partial void OncalibInvalidateChanging(bool value);
    partial void OncalibInvalidateChanged();
    partial void OncalibDigitalOutputChanging(System.Nullable<int> value);
    partial void OncalibDigitalOutputChanged();
    partial void OnspanCalibValidTypeChanging(System.Nullable<int> value);
    partial void OnspanCalibValidTypeChanged();
    partial void OnfactorLowChanging(System.Nullable<decimal> value);
    partial void OnfactorLowChanged();
    partial void OnfactorHighChanging(System.Nullable<decimal> value);
    partial void OnfactorHighChanged();
    partial void OncorrectionZeroFactorChanging(short value);
    partial void OncorrectionZeroFactorChanged();
    partial void OnPocChanging(short value);
    partial void OnPocChanged();
    partial void OnMethodCodeChanging(string value);
    partial void OnMethodCodeChanged();
    partial void OnrangeDeviationLowChanging(System.Nullable<double> value);
    partial void OnrangeDeviationLowChanged();
    partial void OnrangeDeviationHighChanging(System.Nullable<double> value);
    partial void OnrangeDeviationHighChanged();
    partial void OnRangeValidTypeChanging(bool value);
    partial void OnRangeValidTypeChanged();
    partial void OncalibDoubleInvalidateChanging(bool value);
    partial void OncalibDoubleInvalidateChanged();
    partial void OnUseOOCStatusChanging(bool value);
    partial void OnUseOOCStatusChanged();
    partial void OnUseOOC_TriesChanging(int value);
    partial void OnUseOOC_TriesChanged();
    partial void OnUseCalibGapChanging(bool value);
    partial void OnUseCalibGapChanged();
    partial void OnUseCalibGapHoursChanging(int value);
    partial void OnUseCalibGapHoursChanged();
    partial void OnWebDisplayChanging(bool value);
    partial void OnWebDisplayChanged();
    partial void OnDirectiveELVChanging(System.Nullable<decimal> value);
    partial void OnDirectiveELVChanged();
    partial void OnDailyELVChanging(System.Nullable<decimal> value);
    partial void OnDailyELVChanged();
    partial void OnELVAverageChanging(System.Nullable<int> value);
    partial void OnELVAverageChanged();
    partial void OnUseConstantChanging(bool value);
    partial void OnUseConstantChanged();
    partial void OnConstantValidTypeChanging(bool value);
    partial void OnConstantValidTypeChanged();
    partial void OnConstantSamplesChanging(System.Nullable<int> value);
    partial void OnConstantSamplesChanged();
    partial void OnConstantValueChanging(System.Nullable<decimal> value);
    partial void OnConstantValueChanged();
    partial void OnPollutantTypeChanging(int value);
    partial void OnPollutantTypeChanged();
    partial void OnConstantByTimebaseChanging(bool value);
    partial void OnConstantByTimebaseChanged();
    partial void Onthreshold24hrChanging(double value);
    partial void Onthreshold24hrChanged();
    #endregion
		
		public Channel()
		{
			this._InstantData = default(EntityRef<InstantData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					if (this._InstantData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saveCol", DbType="Int NOT NULL")]
		public int saveCol
		{
			get
			{
				return this._saveCol;
			}
			set
			{
				if ((this._saveCol != value))
				{
					this.OnsaveColChanging(value);
					this.SendPropertyChanging();
					this._saveCol = value;
					this.SendPropertyChanged("saveCol");
					this.OnsaveColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protocol", DbType="Int NOT NULL")]
		public int protocol
		{
			get
			{
				return this._protocol;
			}
			set
			{
				if ((this._protocol != value))
				{
					this.OnprotocolChanging(value);
					this.SendPropertyChanging();
					this._protocol = value;
					this.SendPropertyChanged("protocol");
					this.OnprotocolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Int")]
		public System.Nullable<int> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_units", DbType="NVarChar(50)")]
		public string units
		{
			get
			{
				return this._units;
			}
			set
			{
				if ((this._units != value))
				{
					this.OnunitsChanging(value);
					this.SendPropertyChanging();
					this._units = value;
					this.SendPropertyChanged("units");
					this.OnunitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serial", DbType="NVarChar(50)")]
		public string serial
		{
			get
			{
				return this._serial;
			}
			set
			{
				if ((this._serial != value))
				{
					this.OnserialChanging(value);
					this.SendPropertyChanging();
					this._serial = value;
					this.SendPropertyChanged("serial");
					this.OnserialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avgType", DbType="NVarChar(50)")]
		public string avgType
		{
			get
			{
				return this._avgType;
			}
			set
			{
				if ((this._avgType != value))
				{
					this.OnavgTypeChanging(value);
					this.SendPropertyChanging();
					this._avgType = value;
					this.SendPropertyChanged("avgType");
					this.OnavgTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lowRange", DbType="Float")]
		public System.Nullable<double> lowRange
		{
			get
			{
				return this._lowRange;
			}
			set
			{
				if ((this._lowRange != value))
				{
					this.OnlowRangeChanging(value);
					this.SendPropertyChanging();
					this._lowRange = value;
					this.SendPropertyChanged("lowRange");
					this.OnlowRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_highRange", DbType="Float")]
		public System.Nullable<double> highRange
		{
			get
			{
				return this._highRange;
			}
			set
			{
				if ((this._highRange != value))
				{
					this.OnhighRangeChanging(value);
					this.SendPropertyChanging();
					this._highRange = value;
					this.SendPropertyChanged("highRange");
					this.OnhighRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lowVolt", DbType="Float")]
		public System.Nullable<double> lowVolt
		{
			get
			{
				return this._lowVolt;
			}
			set
			{
				if ((this._lowVolt != value))
				{
					this.OnlowVoltChanging(value);
					this.SendPropertyChanging();
					this._lowVolt = value;
					this.SendPropertyChanged("lowVolt");
					this.OnlowVoltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_highVolt", DbType="Float")]
		public System.Nullable<double> highVolt
		{
			get
			{
				return this._highVolt;
			}
			set
			{
				if ((this._highVolt != value))
				{
					this.OnhighVoltChanging(value);
					this.SendPropertyChanging();
					this._highVolt = value;
					this.SendPropertyChanged("highVolt");
					this.OnhighVoltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calcEnable", DbType="Bit NOT NULL")]
		public bool calcEnable
		{
			get
			{
				return this._calcEnable;
			}
			set
			{
				if ((this._calcEnable != value))
				{
					this.OncalcEnableChanging(value);
					this.SendPropertyChanging();
					this._calcEnable = value;
					this.SendPropertyChanged("calcEnable");
					this.OncalcEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calcString", DbType="NVarChar(1000)")]
		public string calcString
		{
			get
			{
				return this._calcString;
			}
			set
			{
				if ((this._calcString != value))
				{
					this.OncalcStringChanging(value);
					this.SendPropertyChanging();
					this._calcString = value;
					this.SendPropertyChanged("calcString");
					this.OncalcStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calcVars", DbType="NVarChar(200)")]
		public string calcVars
		{
			get
			{
				return this._calcVars;
			}
			set
			{
				if ((this._calcVars != value))
				{
					this.OncalcVarsChanging(value);
					this.SendPropertyChanging();
					this._calcVars = value;
					this.SendPropertyChanged("calcVars");
					this.OncalcVarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monCh", DbType="Int")]
		public System.Nullable<int> monCh
		{
			get
			{
				return this._monCh;
			}
			set
			{
				if ((this._monCh != value))
				{
					this.OnmonChChanging(value);
					this.SendPropertyChanging();
					this._monCh = value;
					this.SendPropertyChanged("monCh");
					this.OnmonChChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_channelEX", DbType="Int")]
		public System.Nullable<int> channelEX
		{
			get
			{
				return this._channelEX;
			}
			set
			{
				if ((this._channelEX != value))
				{
					this.OnchannelEXChanging(value);
					this.SendPropertyChanging();
					this._channelEX = value;
					this.SendPropertyChanged("channelEX");
					this.OnchannelEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayFormat", DbType="Int NOT NULL")]
		public int displayFormat
		{
			get
			{
				return this._displayFormat;
			}
			set
			{
				if ((this._displayFormat != value))
				{
					this.OndisplayFormatChanging(value);
					this.SendPropertyChanging();
					this._displayFormat = value;
					this.SendPropertyChanged("displayFormat");
					this.OndisplayFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aENG", DbType="Float")]
		public System.Nullable<double> aENG
		{
			get
			{
				return this._aENG;
			}
			set
			{
				if ((this._aENG != value))
				{
					this.OnaENGChanging(value);
					this.SendPropertyChanging();
					this._aENG = value;
					this.SendPropertyChanged("aENG");
					this.OnaENGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bENG", DbType="Float")]
		public System.Nullable<double> bENG
		{
			get
			{
				return this._bENG;
			}
			set
			{
				if ((this._bENG != value))
				{
					this.OnbENGChanging(value);
					this.SendPropertyChanging();
					this._bENG = value;
					this.SendPropertyChanged("bENG");
					this.OnbENGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_threshold", DbType="Float NOT NULL")]
		public double threshold
		{
			get
			{
				return this._threshold;
			}
			set
			{
				if ((this._threshold != value))
				{
					this.OnthresholdChanging(value);
					this.SendPropertyChanging();
					this._threshold = value;
					this.SendPropertyChanged("threshold");
					this.OnthresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useCalibCorrection", DbType="Bit NOT NULL")]
		public bool useCalibCorrection
		{
			get
			{
				return this._useCalibCorrection;
			}
			set
			{
				if ((this._useCalibCorrection != value))
				{
					this.OnuseCalibCorrectionChanging(value);
					this.SendPropertyChanging();
					this._useCalibCorrection = value;
					this.SendPropertyChanged("useCalibCorrection");
					this.OnuseCalibCorrectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zero", DbType="Float NOT NULL")]
		public double zero
		{
			get
			{
				return this._zero;
			}
			set
			{
				if ((this._zero != value))
				{
					this.OnzeroChanging(value);
					this.SendPropertyChanging();
					this._zero = value;
					this.SendPropertyChanged("zero");
					this.OnzeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factor", DbType="Float NOT NULL")]
		public double factor
		{
			get
			{
				return this._factor;
			}
			set
			{
				if ((this._factor != value))
				{
					this.OnfactorChanging(value);
					this.SendPropertyChanging();
					this._factor = value;
					this.SendPropertyChanged("factor");
					this.OnfactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EUcorrect", DbType="Bit NOT NULL")]
		public bool EUcorrect
		{
			get
			{
				return this._EUcorrect;
			}
			set
			{
				if ((this._EUcorrect != value))
				{
					this.OnEUcorrectChanging(value);
					this.SendPropertyChanging();
					this._EUcorrect = value;
					this.SendPropertyChanged("EUcorrect");
					this.OnEUcorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spanDriftOfRef", DbType="Float NOT NULL")]
		public double spanDriftOfRef
		{
			get
			{
				return this._spanDriftOfRef;
			}
			set
			{
				if ((this._spanDriftOfRef != value))
				{
					this.OnspanDriftOfRefChanging(value);
					this.SendPropertyChanging();
					this._spanDriftOfRef = value;
					this.SendPropertyChanged("spanDriftOfRef");
					this.OnspanDriftOfRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zeroDrift", DbType="Float NOT NULL")]
		public double zeroDrift
		{
			get
			{
				return this._zeroDrift;
			}
			set
			{
				if ((this._zeroDrift != value))
				{
					this.OnzeroDriftChanging(value);
					this.SendPropertyChanging();
					this._zeroDrift = value;
					this.SendPropertyChanged("zeroDrift");
					this.OnzeroDriftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spanOffset", DbType="Int")]
		public System.Nullable<int> spanOffset
		{
			get
			{
				return this._spanOffset;
			}
			set
			{
				if ((this._spanOffset != value))
				{
					this.OnspanOffsetChanging(value);
					this.SendPropertyChanging();
					this._spanOffset = value;
					this.SendPropertyChanged("spanOffset");
					this.OnspanOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logEnable", DbType="Bit NOT NULL")]
		public bool logEnable
		{
			get
			{
				return this._logEnable;
			}
			set
			{
				if ((this._logEnable != value))
				{
					this.OnlogEnableChanging(value);
					this.SendPropertyChanging();
					this._logEnable = value;
					this.SendPropertyChanged("logEnable");
					this.OnlogEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chType", DbType="Int NOT NULL")]
		public int chType
		{
			get
			{
				return this._chType;
			}
			set
			{
				if ((this._chType != value))
				{
					this.OnchTypeChanging(value);
					this.SendPropertyChanging();
					this._chType = value;
					this.SendPropertyChanged("chType");
					this.OnchTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outEnable", DbType="Bit NOT NULL")]
		public bool outEnable
		{
			get
			{
				return this._outEnable;
			}
			set
			{
				if ((this._outEnable != value))
				{
					this.OnoutEnableChanging(value);
					this.SendPropertyChanging();
					this._outEnable = value;
					this.SendPropertyChanged("outEnable");
					this.OnoutEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outProtocol", DbType="Int")]
		public System.Nullable<int> outProtocol
		{
			get
			{
				return this._outProtocol;
			}
			set
			{
				if ((this._outProtocol != value))
				{
					this.OnoutProtocolChanging(value);
					this.SendPropertyChanging();
					this._outProtocol = value;
					this.SendPropertyChanged("outProtocol");
					this.OnoutProtocolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outMonitor", DbType="Int")]
		public System.Nullable<int> outMonitor
		{
			get
			{
				return this._outMonitor;
			}
			set
			{
				if ((this._outMonitor != value))
				{
					this.OnoutMonitorChanging(value);
					this.SendPropertyChanging();
					this._outMonitor = value;
					this.SendPropertyChanged("outMonitor");
					this.OnoutMonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outLowVolt", DbType="Float")]
		public System.Nullable<double> outLowVolt
		{
			get
			{
				return this._outLowVolt;
			}
			set
			{
				if ((this._outLowVolt != value))
				{
					this.OnoutLowVoltChanging(value);
					this.SendPropertyChanging();
					this._outLowVolt = value;
					this.SendPropertyChanged("outLowVolt");
					this.OnoutLowVoltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outHiVolt", DbType="Float")]
		public System.Nullable<double> outHiVolt
		{
			get
			{
				return this._outHiVolt;
			}
			set
			{
				if ((this._outHiVolt != value))
				{
					this.OnoutHiVoltChanging(value);
					this.SendPropertyChanging();
					this._outHiVolt = value;
					this.SendPropertyChanged("outHiVolt");
					this.OnoutHiVoltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rangeValid", DbType="Bit NOT NULL")]
		public bool rangeValid
		{
			get
			{
				return this._rangeValid;
			}
			set
			{
				if ((this._rangeValid != value))
				{
					this.OnrangeValidChanging(value);
					this.SendPropertyChanging();
					this._rangeValid = value;
					this.SendPropertyChanged("rangeValid");
					this.OnrangeValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rateOfChangeValid", DbType="Bit NOT NULL")]
		public bool rateOfChangeValid
		{
			get
			{
				return this._rateOfChangeValid;
			}
			set
			{
				if ((this._rateOfChangeValid != value))
				{
					this.OnrateOfChangeValidChanging(value);
					this.SendPropertyChanging();
					this._rateOfChangeValid = value;
					this.SendPropertyChanged("rateOfChangeValid");
					this.OnrateOfChangeValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rateOfChange", DbType="Float")]
		public System.Nullable<double> rateOfChange
		{
			get
			{
				return this._rateOfChange;
			}
			set
			{
				if ((this._rateOfChange != value))
				{
					this.OnrateOfChangeChanging(value);
					this.SendPropertyChanging();
					this._rateOfChange = value;
					this.SendPropertyChanged("rateOfChange");
					this.OnrateOfChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_viewPos", DbType="Int NOT NULL")]
		public int viewPos
		{
			get
			{
				return this._viewPos;
			}
			set
			{
				if ((this._viewPos != value))
				{
					this.OnviewPosChanging(value);
					this.SendPropertyChanging();
					this._viewPos = value;
					this.SendPropertyChanged("viewPos");
					this.OnviewPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="Int")]
		public System.Nullable<int> address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uniPolar", DbType="Bit")]
		public System.Nullable<bool> uniPolar
		{
			get
			{
				return this._uniPolar;
			}
			set
			{
				if ((this._uniPolar != value))
				{
					this.OnuniPolarChanging(value);
					this.SendPropertyChanging();
					this._uniPolar = value;
					this.SendPropertyChanged("uniPolar");
					this.OnuniPolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calibInvalidate", DbType="Bit NOT NULL")]
		public bool calibInvalidate
		{
			get
			{
				return this._calibInvalidate;
			}
			set
			{
				if ((this._calibInvalidate != value))
				{
					this.OncalibInvalidateChanging(value);
					this.SendPropertyChanging();
					this._calibInvalidate = value;
					this.SendPropertyChanged("calibInvalidate");
					this.OncalibInvalidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calibDigitalOutput", DbType="Int")]
		public System.Nullable<int> calibDigitalOutput
		{
			get
			{
				return this._calibDigitalOutput;
			}
			set
			{
				if ((this._calibDigitalOutput != value))
				{
					this.OncalibDigitalOutputChanging(value);
					this.SendPropertyChanging();
					this._calibDigitalOutput = value;
					this.SendPropertyChanged("calibDigitalOutput");
					this.OncalibDigitalOutputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spanCalibValidType", DbType="Int")]
		public System.Nullable<int> spanCalibValidType
		{
			get
			{
				return this._spanCalibValidType;
			}
			set
			{
				if ((this._spanCalibValidType != value))
				{
					this.OnspanCalibValidTypeChanging(value);
					this.SendPropertyChanging();
					this._spanCalibValidType = value;
					this.SendPropertyChanged("spanCalibValidType");
					this.OnspanCalibValidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factorLow", DbType="Decimal(14,6)")]
		public System.Nullable<decimal> factorLow
		{
			get
			{
				return this._factorLow;
			}
			set
			{
				if ((this._factorLow != value))
				{
					this.OnfactorLowChanging(value);
					this.SendPropertyChanging();
					this._factorLow = value;
					this.SendPropertyChanged("factorLow");
					this.OnfactorLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factorHigh", DbType="Decimal(14,6)")]
		public System.Nullable<decimal> factorHigh
		{
			get
			{
				return this._factorHigh;
			}
			set
			{
				if ((this._factorHigh != value))
				{
					this.OnfactorHighChanging(value);
					this.SendPropertyChanging();
					this._factorHigh = value;
					this.SendPropertyChanged("factorHigh");
					this.OnfactorHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correctionZeroFactor", DbType="SmallInt NOT NULL")]
		public short correctionZeroFactor
		{
			get
			{
				return this._correctionZeroFactor;
			}
			set
			{
				if ((this._correctionZeroFactor != value))
				{
					this.OncorrectionZeroFactorChanging(value);
					this.SendPropertyChanging();
					this._correctionZeroFactor = value;
					this.SendPropertyChanged("correctionZeroFactor");
					this.OncorrectionZeroFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poc", DbType="SmallInt NOT NULL")]
		public short Poc
		{
			get
			{
				return this._Poc;
			}
			set
			{
				if ((this._Poc != value))
				{
					this.OnPocChanging(value);
					this.SendPropertyChanging();
					this._Poc = value;
					this.SendPropertyChanged("Poc");
					this.OnPocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MethodCode
		{
			get
			{
				return this._MethodCode;
			}
			set
			{
				if ((this._MethodCode != value))
				{
					this.OnMethodCodeChanging(value);
					this.SendPropertyChanging();
					this._MethodCode = value;
					this.SendPropertyChanged("MethodCode");
					this.OnMethodCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rangeDeviationLow", DbType="Float")]
		public System.Nullable<double> rangeDeviationLow
		{
			get
			{
				return this._rangeDeviationLow;
			}
			set
			{
				if ((this._rangeDeviationLow != value))
				{
					this.OnrangeDeviationLowChanging(value);
					this.SendPropertyChanging();
					this._rangeDeviationLow = value;
					this.SendPropertyChanged("rangeDeviationLow");
					this.OnrangeDeviationLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rangeDeviationHigh", DbType="Float")]
		public System.Nullable<double> rangeDeviationHigh
		{
			get
			{
				return this._rangeDeviationHigh;
			}
			set
			{
				if ((this._rangeDeviationHigh != value))
				{
					this.OnrangeDeviationHighChanging(value);
					this.SendPropertyChanging();
					this._rangeDeviationHigh = value;
					this.SendPropertyChanged("rangeDeviationHigh");
					this.OnrangeDeviationHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeValidType", DbType="Bit NOT NULL")]
		public bool RangeValidType
		{
			get
			{
				return this._RangeValidType;
			}
			set
			{
				if ((this._RangeValidType != value))
				{
					this.OnRangeValidTypeChanging(value);
					this.SendPropertyChanging();
					this._RangeValidType = value;
					this.SendPropertyChanged("RangeValidType");
					this.OnRangeValidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calibDoubleInvalidate", DbType="Bit NOT NULL")]
		public bool calibDoubleInvalidate
		{
			get
			{
				return this._calibDoubleInvalidate;
			}
			set
			{
				if ((this._calibDoubleInvalidate != value))
				{
					this.OncalibDoubleInvalidateChanging(value);
					this.SendPropertyChanging();
					this._calibDoubleInvalidate = value;
					this.SendPropertyChanged("calibDoubleInvalidate");
					this.OncalibDoubleInvalidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseOOCStatus", DbType="Bit NOT NULL")]
		public bool UseOOCStatus
		{
			get
			{
				return this._UseOOCStatus;
			}
			set
			{
				if ((this._UseOOCStatus != value))
				{
					this.OnUseOOCStatusChanging(value);
					this.SendPropertyChanging();
					this._UseOOCStatus = value;
					this.SendPropertyChanged("UseOOCStatus");
					this.OnUseOOCStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseOOC_Tries", DbType="Int NOT NULL")]
		public int UseOOC_Tries
		{
			get
			{
				return this._UseOOC_Tries;
			}
			set
			{
				if ((this._UseOOC_Tries != value))
				{
					this.OnUseOOC_TriesChanging(value);
					this.SendPropertyChanging();
					this._UseOOC_Tries = value;
					this.SendPropertyChanged("UseOOC_Tries");
					this.OnUseOOC_TriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCalibGap", DbType="Bit NOT NULL")]
		public bool UseCalibGap
		{
			get
			{
				return this._UseCalibGap;
			}
			set
			{
				if ((this._UseCalibGap != value))
				{
					this.OnUseCalibGapChanging(value);
					this.SendPropertyChanging();
					this._UseCalibGap = value;
					this.SendPropertyChanged("UseCalibGap");
					this.OnUseCalibGapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCalibGapHours", DbType="Int NOT NULL")]
		public int UseCalibGapHours
		{
			get
			{
				return this._UseCalibGapHours;
			}
			set
			{
				if ((this._UseCalibGapHours != value))
				{
					this.OnUseCalibGapHoursChanging(value);
					this.SendPropertyChanging();
					this._UseCalibGapHours = value;
					this.SendPropertyChanged("UseCalibGapHours");
					this.OnUseCalibGapHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebDisplay", DbType="Bit NOT NULL")]
		public bool WebDisplay
		{
			get
			{
				return this._WebDisplay;
			}
			set
			{
				if ((this._WebDisplay != value))
				{
					this.OnWebDisplayChanging(value);
					this.SendPropertyChanging();
					this._WebDisplay = value;
					this.SendPropertyChanged("WebDisplay");
					this.OnWebDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectiveELV", DbType="Decimal(14,6)")]
		public System.Nullable<decimal> DirectiveELV
		{
			get
			{
				return this._DirectiveELV;
			}
			set
			{
				if ((this._DirectiveELV != value))
				{
					this.OnDirectiveELVChanging(value);
					this.SendPropertyChanging();
					this._DirectiveELV = value;
					this.SendPropertyChanged("DirectiveELV");
					this.OnDirectiveELVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyELV", DbType="Decimal(14,6)")]
		public System.Nullable<decimal> DailyELV
		{
			get
			{
				return this._DailyELV;
			}
			set
			{
				if ((this._DailyELV != value))
				{
					this.OnDailyELVChanging(value);
					this.SendPropertyChanging();
					this._DailyELV = value;
					this.SendPropertyChanged("DailyELV");
					this.OnDailyELVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELVAverage", DbType="Int")]
		public System.Nullable<int> ELVAverage
		{
			get
			{
				return this._ELVAverage;
			}
			set
			{
				if ((this._ELVAverage != value))
				{
					this.OnELVAverageChanging(value);
					this.SendPropertyChanging();
					this._ELVAverage = value;
					this.SendPropertyChanged("ELVAverage");
					this.OnELVAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseConstant", DbType="Bit NOT NULL")]
		public bool UseConstant
		{
			get
			{
				return this._UseConstant;
			}
			set
			{
				if ((this._UseConstant != value))
				{
					this.OnUseConstantChanging(value);
					this.SendPropertyChanging();
					this._UseConstant = value;
					this.SendPropertyChanged("UseConstant");
					this.OnUseConstantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantValidType", DbType="Bit NOT NULL")]
		public bool ConstantValidType
		{
			get
			{
				return this._ConstantValidType;
			}
			set
			{
				if ((this._ConstantValidType != value))
				{
					this.OnConstantValidTypeChanging(value);
					this.SendPropertyChanging();
					this._ConstantValidType = value;
					this.SendPropertyChanged("ConstantValidType");
					this.OnConstantValidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantSamples", DbType="Int")]
		public System.Nullable<int> ConstantSamples
		{
			get
			{
				return this._ConstantSamples;
			}
			set
			{
				if ((this._ConstantSamples != value))
				{
					this.OnConstantSamplesChanging(value);
					this.SendPropertyChanging();
					this._ConstantSamples = value;
					this.SendPropertyChanged("ConstantSamples");
					this.OnConstantSamplesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantValue", DbType="Decimal(14,6)")]
		public System.Nullable<decimal> ConstantValue
		{
			get
			{
				return this._ConstantValue;
			}
			set
			{
				if ((this._ConstantValue != value))
				{
					this.OnConstantValueChanging(value);
					this.SendPropertyChanging();
					this._ConstantValue = value;
					this.SendPropertyChanged("ConstantValue");
					this.OnConstantValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollutantType", DbType="Int NOT NULL")]
		public int PollutantType
		{
			get
			{
				return this._PollutantType;
			}
			set
			{
				if ((this._PollutantType != value))
				{
					this.OnPollutantTypeChanging(value);
					this.SendPropertyChanging();
					this._PollutantType = value;
					this.SendPropertyChanged("PollutantType");
					this.OnPollutantTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantByTimebase", DbType="Bit NOT NULL")]
		public bool ConstantByTimebase
		{
			get
			{
				return this._ConstantByTimebase;
			}
			set
			{
				if ((this._ConstantByTimebase != value))
				{
					this.OnConstantByTimebaseChanging(value);
					this.SendPropertyChanging();
					this._ConstantByTimebase = value;
					this.SendPropertyChanged("ConstantByTimebase");
					this.OnConstantByTimebaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_threshold24hr", DbType="Float NOT NULL")]
		public double threshold24hr
		{
			get
			{
				return this._threshold24hr;
			}
			set
			{
				if ((this._threshold24hr != value))
				{
					this.Onthreshold24hrChanging(value);
					this.SendPropertyChanging();
					this._threshold24hr = value;
					this.SendPropertyChanged("threshold24hr");
					this.Onthreshold24hrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstantData_Channel", Storage="_InstantData", ThisKey="number", OtherKey="channel", IsForeignKey=true)]
		public InstantData InstantData
		{
			get
			{
				return this._InstantData.Entity;
			}
			set
			{
				InstantData previousValue = this._InstantData.Entity;
				if (((previousValue != value) 
							|| (this._InstantData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstantData.Entity = null;
						previousValue.Channels = null;
					}
					this._InstantData.Entity = value;
					if ((value != null))
					{
						value.Channels = this;
						this._number = value.channel;
					}
					else
					{
						this._number = default(int);
					}
					this.SendPropertyChanged("InstantData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstantData")]
	public partial class InstantData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Date_Time;
		
		private int _channel;
		
		private double _value;
		
		private int _status;
		
		private EntityRef<Channel> _Channels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDate_TimeChanging(System.DateTime value);
    partial void OnDate_TimeChanged();
    partial void OnchannelChanging(int value);
    partial void OnchannelChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public InstantData()
		{
			this._Channels = default(EntityRef<Channel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date_Time
		{
			get
			{
				return this._Date_Time;
			}
			set
			{
				if ((this._Date_Time != value))
				{
					this.OnDate_TimeChanging(value);
					this.SendPropertyChanging();
					this._Date_Time = value;
					this.SendPropertyChanged("Date_Time");
					this.OnDate_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_channel", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int channel
		{
			get
			{
				return this._channel;
			}
			set
			{
				if ((this._channel != value))
				{
					this.OnchannelChanging(value);
					this.SendPropertyChanging();
					this._channel = value;
					this.SendPropertyChanged("channel");
					this.OnchannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstantData_Channel", Storage="_Channels", ThisKey="channel", OtherKey="number", IsUnique=true, IsForeignKey=false)]
		public Channel Channels
		{
			get
			{
				return this._Channels.Entity;
			}
			set
			{
				Channel previousValue = this._Channels.Entity;
				if (((previousValue != value) 
							|| (this._Channels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Channels.Entity = null;
						previousValue.InstantData = null;
					}
					this._Channels.Entity = value;
					if ((value != null))
					{
						value.InstantData = this;
					}
					this.SendPropertyChanged("Channels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
